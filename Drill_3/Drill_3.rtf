Testo della esercitazione

PARTE 1
Si realizzi in C++ una gerarchia Utente-Gestore. 
La classe Utente contiene le seguenti variabili membro:
Login
Password
(stringhe C allocate dinamicamente, char *)
La classe Gestore aggiunge la variabile membro:
Profilo 
(stringa C allocata dinamicamente, char *)

Si sviluppi la gerarchia fornendo le funzionalità necessarie per la gestione dell’estensione dinamica degli oggetti, si 
forniscano gli operatori di shift (<< , >>), l’operatore ==, le funzioni get per Login e Profilo, e la funzione booleana 
Valida, che consente di effettuare un controllo sulla Password e sul Profilo. Il metodo Valida fornito dalla classe base 
controlla che la lunghezza della Password sia compreso in un intervallo i cui estremi sono due interi forniti in ingresso 
dall’utente. Il metodo fornito dalla classe derivata effettua lo stesso controllo sulla concatenazione di Password e Profilo.  
Si consideri che si vuole effettuare di Valida un uso polimorfo. Il programma utente, mediante una propria funzione 
valida_elenco, applica il metodo Valida a tutti gli elementi di un vettore da lui/lei fornito in ingresso alla funzione, 
in modo da effettuare la validazione su una sequenza di utenti. La funzione  valida_elenco lancia una eccezione di tipo 
NoAuth (definita dallo studente) che segnali la fallita validazione di un utente della gerarchia riportando la Login 
dell’utente per il quale la validazione è fallita.


PARTE2
Si sviluppi una Coda di elementi della gerarchia ricorrendo ad una implementazione mediante coda statica circolare. 
Si effettui il test della coda inserendo in essa solo i riferimenti agli oggetti che risultano autenticati, introducendo 
l’inserimento degli elementi nel ciclo precedente.
